<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro">

    <xacro:include filename="inertial_macros.xacro" />

    <xacro:property name="chassis_radius" value="0.110" />
    <xacro:property name="chassis_thickness" value="0.006" />
    <xacro:property name="chassis_mass" value="1.0" />

    <xacro:property name="lidar_plate_radius" value="0.0625" />
    <xacro:property name="lidar_plate_thickness" value="${chassis_thickness}" />
    <xacro:property name="lidar_plate_offset_x" value="0.035" />
    <xacro:property name="lidar_plate_offset_z" value="0.041" />

    <xacro:property name="lidar_radius" value="0.0346" />
    <xacro:property name="lidar_thickness" value="0.0235" />
    <xacro:property name="lidar_offset_x" value="0.01954" />
    <xacro:property name="lidar_offset_z" value="0.0436" />

    <xacro:property name="camera_offset_x" value="${0.053517-0.00075}" />
    <xacro:property name="camera_offset_z" value="0.00125" />

    <xacro:property name="wheel_radius" value="0.0425" />
    <xacro:property name="wheel_thickness" value="0.040" />
    <xacro:property name="wheel_mass" value="0.05" />
    <xacro:property name="wheel_offset_y" value="${0.112 + wheel_thickness/2}" />
    <xacro:property name="wheel_offset_z" value="0.024" />
    <xacro:property name="wheel_offset_x" value="0.1" />


    <xacro:property name="caster_wheel_radius" value="0.0325" />
    <xacro:property name="caster_wheel_thickness" value="0.030" />
    <xacro:property name="caster_wheel_mass" value="0.01" />

    <xacro:property name="caster_wheel_offset_x" value="0.08036" />
    <xacro:property name="caster_wheel_offset_z"
        value="${wheel_offset_z + wheel_radius - caster_wheel_radius}" />

    <material name="white">
        <color rgba="1 1 1 1" />
    </material>

    <material name="orange">
        <color rgba="1 0.3 0.1 1" />
    </material>

    <material name="blue">
        <color rgba="0.2 0.2 1 1" />
    </material>

    <material name="black">
        <color rgba="0 0 0 1" />
    </material>

    <material name="red">
        <color rgba="1 0 0 1" />
    </material>


    <link name="base_link">
    </link>


    <joint name="base_footprint_joint" type="fixed">
        <parent link="base_link" />
        <child link="base_footprint" />
        <origin xyz="0 0 0" rpy="0 0 0" />
    </joint>

    <link name="base_footprint">
    </link>

    <joint name="chassis_joint" type="fixed">
        <parent link="base_link" />
        <child link="chassis" />
        <origin xyz="0 0 ${wheel_offset_z}" />
    </joint>

    <link name="chassis">
        <visual>
            <origin xyz="0 0 ${chassis_thickness/2}" />
            <geometry>
                <cylinder radius="${chassis_radius}" length="${chassis_thickness}" />
            </geometry>
            <material name="orange" />
        </visual>
        <collision>
            <origin xyz="0 0 ${chassis_thickness/2}" />
            <geometry>
                <cylinder radius="${chassis_radius}" length="${chassis_thickness}" />
            </geometry>
        </collision>
        <xacro:inertial_cylinder mass="${chassis_mass}" radius="${chassis_radius}"
            length="${chassis_thickness}">
            <origin xyz="0 0 ${chassis_thickness/2}" rpy="0 0 0" />
        </xacro:inertial_cylinder>
    </link>

    <gazebo reference="chassis">
        <material>Gazebo/Orange</material>
    </gazebo>

    <joint name="lidar_plate_joint" type="fixed">
        <parent link="chassis" />
        <child link="lidar_plate" />
        <origin xyz="${-lidar_plate_offset_x} 0 ${lidar_plate_offset_z}" />
    </joint>

    <link name="lidar_plate">
        <visual>
            <origin xyz="0 0 ${chassis_thickness/2}" />
            <geometry>
                <cylinder radius="${lidar_plate_radius}" length="${chassis_thickness}" />
            </geometry>
            <material name="orange" />
        </visual>
        <visual>
            <origin xyz="0 0 ${-lidar_plate_offset_z/2}" />
            <geometry>
                <cylinder radius="0.01" length="${lidar_plate_offset_z}" />
            </geometry>
            <material name="orange" />
        </visual>
        <collision>
            <origin xyz="0 0 ${chassis_thickness/2}" />
            <geometry>
                <cylinder radius="${lidar_plate_radius}" length="${chassis_thickness}" />
            </geometry>
        </collision>
        <xacro:inertial_cylinder mass="${chassis_mass}" radius="${lidar_plate_radius}"
            length="${chassis_thickness}">
            <origin xyz="0 0 ${lidar_plate_thickness/2}" rpy="0 0 0" />
        </xacro:inertial_cylinder>
    </link>

    <gazebo reference="lidar_plate">
        <material>Gazebo/Orange</material>
    </gazebo>

    <!--wheels start here-->
<joint name="left_wheel_joint" type="continuous">
    <parent link="base_link" />
    <child link="left_wheel" />
    <origin xyz="${wheel_offset_x} ${wheel_offset_y} 0" rpy="-${pi/2} 0 0" />
    <axis xyz="0 0 1" />
</joint>

    <link name="left_wheel">
        <visual>
            <geometry>
                <cylinder radius="${wheel_radius}" length="${wheel_thickness}" />
            </geometry>
            <material name="blue" />
        </visual>
        <collision>
            <origin xyz="0 0 0" rpy="0 0 0" />
            <geometry>
                <cylinder radius="${wheel_radius}" length="${wheel_thickness}" />
            </geometry>
        </collision>
        <xacro:inertial_cylinder mass="${wheel_mass}" radius="${wheel_radius}" length="${wheel_thickness}">
            <origin xyz="0 0 0" rpy="0 0 0" />
        </xacro:inertial_cylinder>
    </link>

    <gazebo reference="left_wheel">
        <material>Gazebo/Blue</material>
    </gazebo>


    <joint name="right_wheel_joint" type="continuous">
        <parent link="base_link" />
        <child link="right_wheel" />
        <origin xyz="${wheel_offset_x} ${-wheel_offset_y} 0" rpy="${pi/2} 0 0" />
        <axis xyz="0 0 -1" />
    </joint>

    <link name="right_wheel">
        <visual>
            <geometry>
                <cylinder radius="${wheel_radius}" length="${wheel_thickness}" />
            </geometry>
            <material name="blue" />
        </visual>
        <collision>
            <origin xyz="0 0 0" rpy="0 0 0" />
            <geometry>
                <cylinder radius="${wheel_radius}" length="${wheel_thickness}" />
            </geometry>
        </collision>
        <xacro:inertial_cylinder mass="${wheel_mass}" radius="${wheel_radius}" length="${wheel_thickness}">
            <origin xyz="0 0 0" rpy="0 0 0" />
        </xacro:inertial_cylinder>
    </link>

    <gazebo reference="right_wheel">
        <material>Gazebo/Blue</material>
    </gazebo>

    <!--
    <joint name="front_caster_wheel_joint" type="fixed">
        <parent link="chassis" />
        <child link="front_caster_wheel" />
        <origin xyz="${caster_wheel_offset_x} 0 ${-caster_wheel_offset_z}" rpy="${pi/2} 0 0" />
        <axis xyz="0 0 1" />
    </joint>

    <link name="front_caster_wheel">
        <visual>
            <geometry>
                <cylinder radius="${caster_wheel_radius}" length="${caster_wheel_thickness}" />
            </geometry>
        <material name="white" />
        </visual>
        <collision>
            <geometry>
                <sphere radius="${caster_wheel_radius}" />
            </geometry>
        </collision>
        <xacro:inertial_sphere mass="${caster_wheel_mass}" radius="${caster_wheel_radius}">
            <origin xyz="0 0 0" rpy="0 0 0" />
        </xacro:inertial_sphere>
    </link>

    <gazebo reference="front_caster_wheel">
        <material>Gazebo/White</material>
        <mu1 value="0.001" />
        <mu2 value="0.001" />
    </gazebo>
    -->

    <joint name="back_caster_wheel_joint" type="fixed">
        <parent link="chassis" />
        <child link="back_caster_wheel" />
        <origin xyz="${-caster_wheel_offset_x} 0 ${-caster_wheel_offset_z}" rpy="${pi/2} 0 0" />
        <axis xyz="0 0 1" />
    </joint>

    <link name="back_caster_wheel">
        <visual>
            <geometry>
                <cylinder radius="${caster_wheel_radius}" length="${caster_wheel_thickness}" />
            </geometry>
            <material name="white" />
        </visual>
        <collision>
            <geometry>
                <sphere radius="${caster_wheel_radius}" />
            </geometry>
        </collision>
        <xacro:inertial_sphere mass="${caster_wheel_mass}" radius="${caster_wheel_radius}">
            <origin xyz="0 0 0" rpy="0 0 0" />
        </xacro:inertial_sphere>
    </link>

    <gazebo reference="back_caster_wheel">
        <material>Gazebo/White</material>
        <mu1 value="0.001" />
        <mu2 value="0.001" />
    </gazebo>

    <joint name="laser_joint" type="fixed">
        <parent link="lidar_plate" />
        <child link="laser_frame" />
        <origin xyz="${-lidar_offset_x} 0 ${lidar_offset_z}" rpy="0 0 0" />
    </joint>

    <link name="laser_frame">
        <visual>
            <geometry>
                <cylinder radius="${lidar_radius}" length="${lidar_thickness}" />
            </geometry>
            <material name="black" />
        </visual>
        <visual>
            <origin xyz="0 0 ${-lidar_offset_z/2}" />
            <geometry>
                <cylinder radius="0.01" length="${lidar_offset_z}" />
            </geometry>
            <material name="black" />
        </visual>
        <collision>
            <geometry>
                <cylinder radius="${lidar_radius}" length="${lidar_thickness}" />
            </geometry>
        </collision>
        <xacro:inertial_cylinder mass="0.1" length="${lidar_thickness}" radius="${lidar_radius}">
            <origin xyz="0 0 0" rpy="0 0 0" />
        </xacro:inertial_cylinder>
    </link>

    <gazebo reference="laser_frame">
        <material>Gazebo/Black</material>

        <sensor name="laser" type="ray">
            <pose> 0 0 0 0 0 0 </pose>
            <visualize>false</visualize>
            <update_rate>10</update_rate>
            <ray>
                <scan>
                    <horizontal>
                        <samples>360</samples>
                        <min_angle>-3.14</min_angle>
                        <max_angle>3.14</max_angle>
                    </horizontal>
                </scan>
                <range>
                    <min>0.3</min>
                    <max>12</max>
                </range>
            </ray>
            <plugin name="laser_controller" filename="libgazebo_ros_ray_sensor.so">
                <ros>
                    <argument>~/out:=scan</argument>
                </ros>
                <output_type>sensor_msgs/LaserScan</output_type>
                <frame_name>laser_frame</frame_name>
            </plugin>
        </sensor>
    </gazebo>

    <joint name="camera_joint" type="fixed">
        <parent link="lidar_plate" />
        <child link="camera_link" />
        <origin xyz="${camera_offset_x} 0 ${camera_offset_z + 0.03/2}" rpy="0 0 0" />
    </joint>

    <link name="camera_link">
        <visual>
            <geometry>
                <box size="0.010 0.03 0.03" />
            </geometry>
            <material name="red" />
        </visual>
    </link>

    <gazebo reference="camera_link">
        <material>Gazebo/Red</material>
    </gazebo>


</robot>